package tragicneko.tragicmc.client.model;

import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;

public class ModelDeathReaper extends ModelBase
{
	//fields
	ModelRenderer SpineMiddle;
	ModelRenderer SpineBottom;
	ModelRenderer SpineTop;
	ModelRenderer SkullBack;
	ModelRenderer RibML;
	ModelRenderer RibTL;
	ModelRenderer RibTR;
	ModelRenderer RibMR;
	ModelRenderer RibBL;
	ModelRenderer RibBR;
	ModelRenderer Heart;
	ModelRenderer FrontRibTL;
	ModelRenderer FrontRibTR;
	ModelRenderer FrontRibML;
	ModelRenderer FrontRibMR;
	ModelRenderer FrontRibBL;
	ModelRenderer FrontRibBR;
	ModelRenderer ShoulderRight;
	ModelRenderer ShoulderLeft;
	ModelRenderer UpperArmLeft;
	ModelRenderer UpperArmRight;
	ModelRenderer SkullFront;
	ModelRenderer UpperTeeth;
	ModelRenderer LowerJaw;
	ModelRenderer LowerToothRight;
	ModelRenderer LowerToothLeft;
	ModelRenderer HornRight;
	ModelRenderer HornLeft;
	ModelRenderer ForearmRight;
	ModelRenderer ForearmLeft;
	ModelRenderer ScytheHandle;
	ModelRenderer ScytheBladeThick;
	ModelRenderer ScytheBladeMiddle;
	ModelRenderer ScytheBladeThin;
	ModelRenderer RightThumb;
	ModelRenderer RightFinger1;
	ModelRenderer RightFinger2;
	ModelRenderer LeftFinger1;
	ModelRenderer LeftFinger2;
	ModelRenderer LeftThumb;

	public ModelDeathReaper()
	{
		textureWidth = 128;
		textureHeight = 64;

		SpineMiddle = new ModelRenderer(this, 0, 0);
		SpineMiddle.addBox(-1F, -3F, 0F, 2, 6, 1);
		SpineMiddle.setRotationPoint(0F, 2F, 3F);
		SpineMiddle.setTextureSize(128, 64);
		SpineMiddle.mirror = true;
		setRotation(SpineMiddle, -0.0743572F, 0F, 0F);
		SpineBottom = new ModelRenderer(this, 0, 0);
		SpineBottom.addBox(-1F, 0F, 0F, 2, 5, 1);
		SpineBottom.setRotationPoint(0F, 5F, 3F);
		SpineBottom.setTextureSize(128, 64);
		SpineBottom.mirror = true;
		setRotation(SpineBottom, 0.2974289F, 0F, 0F);
		SpineTop = new ModelRenderer(this, 0, 0);
		SpineTop.addBox(-1F, -3F, -1F, 2, 3, 1);
		SpineTop.setRotationPoint(0F, -1F, 4F);
		SpineTop.setTextureSize(128, 64);
		SpineTop.mirror = true;
		setRotation(SpineTop, 0.3346075F, 0F, 0F);
		SkullBack = new ModelRenderer(this, 0, 0);
		SkullBack.addBox(-2.5F, -5F, -1F, 5, 5, 2);
		SkullBack.setRotationPoint(0F, -4F, 2F);
		SkullBack.setTextureSize(128, 64);
		SkullBack.mirror = true;
		setRotation(SkullBack, 0F, 0F, 0F);
		RibML = new ModelRenderer(this, 0, 0);
		RibML.addBox(0F, 0F, 0F, 4, 1, 1);
		RibML.setRotationPoint(1F, 1F, 4F);
		RibML.setTextureSize(128, 64);
		RibML.mirror = true;
		setRotation(RibML, 0F, 0.3346075F, 0F);
		RibTL = new ModelRenderer(this, 0, 0);
		RibTL.addBox(0F, -1F, 0F, 4, 1, 1);
		RibTL.setRotationPoint(1F, 0F, 4F);
		RibTL.setTextureSize(128, 64);
		RibTL.mirror = true;
		setRotation(RibTL, 0F, 0.3346075F, 0F);
		RibTR = new ModelRenderer(this, 0, 0);
		RibTR.addBox(-4F, -1F, 0F, 4, 1, 1);
		RibTR.setRotationPoint(-1F, 0F, 4F);
		RibTR.setTextureSize(128, 64);
		RibTR.mirror = true;
		setRotation(RibTR, 0F, -0.3346075F, 0F);
		RibMR = new ModelRenderer(this, 0, 0);
		RibMR.addBox(-4F, 0F, 0F, 4, 1, 1);
		RibMR.setRotationPoint(-1F, 1F, 4F);
		RibMR.setTextureSize(128, 64);
		RibMR.mirror = true;
		setRotation(RibMR, 0F, -0.3717861F, 0F);
		RibBL = new ModelRenderer(this, 0, 0);
		RibBL.addBox(0F, 0F, 0F, 3, 1, 1);
		RibBL.setRotationPoint(1F, 3F, 4F);
		RibBL.setTextureSize(128, 64);
		RibBL.mirror = true;
		setRotation(RibBL, 0F, 0.4089647F, 0F);
		RibBR = new ModelRenderer(this, 0, 0);
		RibBR.addBox(-3F, 0F, 0F, 3, 1, 1);
		RibBR.setRotationPoint(-1F, 3F, 4F);
		RibBR.setTextureSize(128, 64);
		RibBR.mirror = true;
		setRotation(RibBR, 0F, -0.5576792F, 0F);
		Heart = new ModelRenderer(this, 16, 14);
		Heart.addBox(-1F, -1F, -1F, 2, 2, 2);
		Heart.setRotationPoint(0F, 1F, 2F);
		Heart.setTextureSize(128, 64);
		Heart.mirror = true;
		setRotation(Heart, 0F, 0F, 0F);
		FrontRibTL = new ModelRenderer(this, 0, 0);
		FrontRibTL.addBox(-1F, 0F, 0F, 5, 1, 1);
		FrontRibTL.setRotationPoint(4F, -1F, 3F);
		FrontRibTL.setTextureSize(128, 64);
		FrontRibTL.mirror = true;
		setRotation(FrontRibTL, 0F, 2.67686F, -0.1115358F);
		FrontRibTR = new ModelRenderer(this, 0, 0);
		FrontRibTR.addBox(0F, 0F, -1F, 4, 1, 1);
		FrontRibTR.setRotationPoint(-4F, -1F, 3F);
		FrontRibTR.setTextureSize(128, 64);
		FrontRibTR.mirror = true;
		setRotation(FrontRibTR, 0F, 0.5948578F, -0.1115358F);
		FrontRibML = new ModelRenderer(this, 0, 0);
		FrontRibML.addBox(0F, 0F, 0F, 4, 1, 1);
		FrontRibML.setRotationPoint(4F, 1F, 3F);
		FrontRibML.setTextureSize(128, 64);
		FrontRibML.mirror = true;
		setRotation(FrontRibML, 0F, 2.490967F, 0F);
		FrontRibMR = new ModelRenderer(this, 0, 0);
		FrontRibMR.addBox(0F, 0F, -1F, 4, 1, 1);
		FrontRibMR.setRotationPoint(-4F, 1F, 3F);
		FrontRibMR.setTextureSize(128, 64);
		FrontRibMR.mirror = true;
		setRotation(FrontRibMR, 0F, 0.8551081F, 0F);
		FrontRibBL = new ModelRenderer(this, 0, 0);
		FrontRibBL.addBox(0F, 0F, 0F, 3, 1, 1);
		FrontRibBL.setRotationPoint(3F, 3F, 3F);
		FrontRibBL.setTextureSize(128, 64);
		FrontRibBL.mirror = true;
		setRotation(FrontRibBL, 0F, 2.602503F, 0.0743572F);
		FrontRibBR = new ModelRenderer(this, 0, 0);
		FrontRibBR.addBox(0F, 0F, -1F, 3, 1, 1);
		FrontRibBR.setRotationPoint(-3F, 3F, 3F);
		FrontRibBR.setTextureSize(128, 64);
		FrontRibBR.mirror = true;
		setRotation(FrontRibBR, 0F, 0.4461433F, 0.1487144F);
		ShoulderRight = new ModelRenderer(this, 0, 0);
		ShoulderRight.addBox(-1F, 0F, -1F, 3, 3, 3);
		ShoulderRight.setRotationPoint(-6F, -1F, 2F);
		ShoulderRight.setTextureSize(128, 64);
		ShoulderRight.mirror = true;
		setRotation(ShoulderRight, 0F, 0F, 0F);
		ShoulderLeft = new ModelRenderer(this, 0, 0);
		ShoulderLeft.addBox(0F, 0F, -1F, 3, 3, 3);
		ShoulderLeft.setRotationPoint(5F, -1F, 2F);
		ShoulderLeft.setTextureSize(128, 64);
		ShoulderLeft.mirror = true;
		setRotation(ShoulderLeft, 0F, 0F, 0F);
		UpperArmLeft = new ModelRenderer(this, 0, 0);
		UpperArmLeft.addBox(1F, 3F, 0F, 1, 6, 1);
		UpperArmLeft.setRotationPoint(5F, -1F, 2F);
		UpperArmLeft.setTextureSize(128, 64);
		UpperArmLeft.mirror = true;
		setRotation(UpperArmLeft, 0F, 0F, 0F);
		UpperArmRight = new ModelRenderer(this, 0, 0);
		UpperArmRight.addBox(-1F, 3F, 0F, 1, 6, 1);
		UpperArmRight.setRotationPoint(-5F, -1F, 3F);
		UpperArmRight.setTextureSize(128, 64);
		UpperArmRight.mirror = true;
		setRotation(UpperArmRight, 0F, 0F, 0F);
		SkullFront = new ModelRenderer(this, 0, 14);
		SkullFront.addBox(-2F, -5F, -3F, 4, 4, 2);
		SkullFront.setRotationPoint(0F, -4F, 2F);
		SkullFront.setTextureSize(128, 64);
		SkullFront.mirror = true;
		setRotation(SkullFront, 0F, 0F, 0F);
		UpperTeeth = new ModelRenderer(this, 0, 0);
		UpperTeeth.addBox(-1F, -1F, -3F, 2, 1, 1);
		UpperTeeth.setRotationPoint(0F, -4F, 2F);
		UpperTeeth.setTextureSize(128, 64);
		UpperTeeth.mirror = true;
		setRotation(UpperTeeth, 0F, 0F, 0F);
		LowerJaw = new ModelRenderer(this, 0, 0);
		LowerJaw.addBox(-2.5F, 0F, -4F, 5, 1, 4);
		LowerJaw.setRotationPoint(0F, -4F, 2F);
		LowerJaw.setTextureSize(128, 64);
		LowerJaw.mirror = true;
		setRotation(LowerJaw, 0F, 0F, 0F);
		LowerToothRight = new ModelRenderer(this, 0, 0);
		LowerToothRight.addBox(-2F, -1F, -4F, 1, 1, 1);
		LowerToothRight.setRotationPoint(0F, -4F, 2F);
		LowerToothRight.setTextureSize(128, 64);
		LowerToothRight.mirror = true;
		setRotation(LowerToothRight, 0F, 0F, 0F);
		LowerToothLeft = new ModelRenderer(this, 0, 0);
		LowerToothLeft.addBox(1F, -1F, -4F, 1, 1, 1);
		LowerToothLeft.setRotationPoint(0F, -4F, 2F);
		LowerToothLeft.setTextureSize(128, 64);
		LowerToothLeft.mirror = true;
		setRotation(LowerToothLeft, 0F, 0F, 0F);
		HornRight = new ModelRenderer(this, 0, 0);
		HornRight.addBox(-3F, -8F, 0F, 1, 5, 1);
		HornRight.setRotationPoint(0F, -4F, 2F);
		HornRight.setTextureSize(128, 64);
		HornRight.mirror = true;
		setRotation(HornRight, 0F, 0F, -0.2230717F);
		HornLeft = new ModelRenderer(this, 0, 0);
		HornLeft.addBox(2F, -8F, 0F, 1, 5, 1);
		HornLeft.setRotationPoint(0F, -4F, 2F);
		HornLeft.setTextureSize(128, 64);
		HornLeft.mirror = true;
		setRotation(HornLeft, 0F, 0F, 0.2230717F);
		ForearmRight = new ModelRenderer(this, 0, 0);
		ForearmRight.addBox(-1F, 0F, -1F, 3, 8, 3);
		ForearmRight.setRotationPoint(-6F, 8F, 3F);
		ForearmRight.setTextureSize(128, 64);
		ForearmRight.mirror = true;
		setRotation(ForearmRight, -0.5576792F, 0F, 0F);
		ForearmLeft = new ModelRenderer(this, 0, 0);
		ForearmLeft.addBox(-1F, 0F, -1F, 3, 8, 3);
		ForearmLeft.setRotationPoint(6F, 8F, 2F);
		ForearmLeft.setTextureSize(128, 64);
		ForearmLeft.mirror = true;
		setRotation(ForearmLeft, 0F, 0F, 0F);
		ScytheHandle = new ModelRenderer(this, 0, 26);
		ScytheHandle.addBox(-10F, 0F, 0F, 28, 1, 1);
		ScytheHandle.setRotationPoint(-6F, 16F, -1F);
		ScytheHandle.setTextureSize(128, 64);
		ScytheHandle.mirror = true;
		setRotation(ScytheHandle, 0F, 2.05995267F, 2.04554337F);
		ScytheBladeThick = new ModelRenderer(this, 0, 30);
		ScytheBladeThick.addBox(0F, 0F, 0F, 10, 5, 1);
		ScytheBladeThick.setRotationPoint(-12F, 7F, -15F);
		ScytheBladeThick.setTextureSize(128, 64);
		ScytheBladeThick.mirror = true;
		setRotation(ScytheBladeThick, 0.9666439F, 0.3346075F, -0.0371786F);
		ScytheBladeMiddle = new ModelRenderer(this, 0, 38);
		ScytheBladeMiddle.addBox(5F, 1F, 0F, 13, 4, 1);
		ScytheBladeMiddle.setRotationPoint(-12F, 7F, -15F);
		ScytheBladeMiddle.setTextureSize(128, 64);
		ScytheBladeMiddle.mirror = true;
		setRotation(ScytheBladeMiddle, 0.9666439F, 0.3346075F, -0.0371786F);
		ScytheBladeThin = new ModelRenderer(this, 0, 46);
		ScytheBladeThin.addBox(12F, 2F, 0F, 13, 2, 1);
		ScytheBladeThin.setRotationPoint(-12F, 7F, -15F);
		ScytheBladeThin.setTextureSize(128, 64);
		ScytheBladeThin.mirror = true;
		setRotation(ScytheBladeThin, 0.9666439F, 0.3346075F, -0.0371786F);
		RightThumb = new ModelRenderer(this, 0, 0);
		RightThumb.addBox(1F, 1F, 0F, 1, 2, 1);
		RightThumb.setRotationPoint(-6F, 14F, -1F);
		RightThumb.setTextureSize(128, 64);
		RightThumb.mirror = true;
		setRotation(RightThumb, -0.3717861F, 0F, 0F);
		RightFinger1 = new ModelRenderer(this, 0, 0);
		RightFinger1.addBox(-1F, 1F, -1F, 1, 2, 1);
		RightFinger1.setRotationPoint(-6F, 14F, -1F);
		RightFinger1.setTextureSize(128, 64);
		RightFinger1.mirror = true;
		setRotation(RightFinger1, -0.3717861F, 0F, 0F);
		RightFinger2 = new ModelRenderer(this, 0, 0);
		RightFinger2.addBox(0F, 1F, 1F, 1, 2, 1);
		RightFinger2.setRotationPoint(-6F, 14F, -1F);
		RightFinger2.setTextureSize(128, 64);
		RightFinger2.mirror = true;
		setRotation(RightFinger2, -0.3717861F, 0F, 0F);
		LeftFinger1 = new ModelRenderer(this, 0, 0);
		LeftFinger1.addBox(0F, 0F, 0F, 1, 2, 1);
		LeftFinger1.setRotationPoint(7F, 16F, 3F);
		LeftFinger1.setTextureSize(128, 64);
		LeftFinger1.mirror = true;
		setRotation(LeftFinger1, 0F, 0F, 0F);
		LeftFinger1 = new ModelRenderer(this, 0, 0);
		LeftFinger1.addBox(0F, 0F, -2F, 1, 2, 1);
		LeftFinger1.setRotationPoint(7F, 16F, 3F);
		LeftFinger1.setTextureSize(128, 64);
		LeftFinger1.mirror = true;
		setRotation(LeftFinger1, 0F, 0F, 0F);
		LeftFinger1 = new ModelRenderer(this, 0, 0);
		LeftFinger1.addBox(-2F, 0F, -1F, 1, 2, 1);
		LeftFinger1.setRotationPoint(7F, 16F, 3F);
		LeftFinger1.setTextureSize(128, 64);
		LeftFinger1.mirror = true;
		setRotation(LeftFinger1, 0F, 0F, 0F);
	}

	public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5)
	{
		super.render(entity, f, f1, f2, f3, f4, f5);
		setRotationAngles(f, f1, f2, f3, f4, f5, entity);
		SpineMiddle.render(f5);
		SpineBottom.render(f5);
		SpineTop.render(f5);
		SkullBack.render(f5);
		RibML.render(f5);
		RibTL.render(f5);
		RibTR.render(f5);
		RibMR.render(f5);
		RibBL.render(f5);
		RibBR.render(f5);
		Heart.render(f5);
		FrontRibTL.render(f5);
		FrontRibTR.render(f5);
		FrontRibML.render(f5);
		FrontRibMR.render(f5);
		FrontRibBL.render(f5);
		FrontRibBR.render(f5);
		ShoulderRight.render(f5);
		ShoulderLeft.render(f5);
		UpperArmLeft.render(f5);
		UpperArmRight.render(f5);
		SkullFront.render(f5);
		UpperTeeth.render(f5);
		LowerJaw.render(f5);
		LowerToothRight.render(f5);
		LowerToothLeft.render(f5);
		HornRight.render(f5);
		HornLeft.render(f5);
		ForearmRight.render(f5);
		ForearmLeft.render(f5);
		ScytheHandle.render(f5);
		ScytheBladeThick.render(f5);
		ScytheBladeMiddle.render(f5);
		ScytheBladeThin.render(f5);
		RightThumb.render(f5);
		RightFinger1.render(f5);
		RightFinger2.render(f5);
		LeftFinger1.render(f5);
		LeftFinger1.render(f5);
		LeftFinger1.render(f5);
	}

	private void setRotation(ModelRenderer model, float x, float y, float z)
	{
		model.rotateAngleX = x;
		model.rotateAngleY = y;
		model.rotateAngleZ = z;
	}

	public void setRotationAngles(float f, float f1, float f2, float f3, float f4, float f5, Entity entity)
	{
		super.setRotationAngles(f, f1, f2, f3, f4, f5, entity);
	}

}
