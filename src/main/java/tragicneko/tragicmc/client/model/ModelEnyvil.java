package tragicneko.tragicmc.client.model;

import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;

public class ModelEnyvil extends ModelBase
{
	ModelRenderer ShellTop;
	ModelRenderer ShellBottom;
	ModelRenderer Eye;
	ModelRenderer ShellTopMid;
	ModelRenderer ShellBack;
	ModelRenderer ShellBottomMid;
	ModelRenderer UpperRightTooth;
	ModelRenderer UpperLeftTooth;
	ModelRenderer LowerRightTooth;
	ModelRenderer LowerLeftTooth;
	ModelRenderer ShellLeftThick;
	ModelRenderer ShellRightThick;
	ModelRenderer ClawNobRight;
	ModelRenderer ClawNobLeft;
	ModelRenderer ShellRightThin;
	ModelRenderer ShellLeftThin;
	ModelRenderer RightMidLeg;
	ModelRenderer LeftMidLeg;
	ModelRenderer LeftLowerLeg;
	ModelRenderer RightLowerLeg;
	ModelRenderer LeftUpperLeg;
	ModelRenderer RightUpperLeg;
	ModelRenderer RightClawArm;
	ModelRenderer LeftClawArm;
	ModelRenderer LeftClawBig;
	ModelRenderer LeftClawSmall;
	ModelRenderer RightClawBig;
	ModelRenderer RightClawSmall;
	ModelRenderer LeftMidTip;
	ModelRenderer RightMidTip;
	ModelRenderer LeftLowerTip;
	ModelRenderer RightLowerTip;
	ModelRenderer LeftUpperTip;
	ModelRenderer RightUpperTip;

	public ModelEnyvil()
	{
		textureWidth = 128;
		textureHeight = 64;

		ShellTop = new ModelRenderer(this, 60, 0);
		ShellTop.addBox(-9F, -9F, -7F, 18, 3, 16);
		ShellTop.setRotationPoint(0F, -3F, 0F);
		ShellTop.setTextureSize(128, 64);
		ShellTop.mirror = true;
		setRotation(ShellTop, 0F, 0F, 0F);
		ShellBottom = new ModelRenderer(this, 64, 20);
		ShellBottom.addBox(-8F, 10F, -5F, 16, 2, 14);
		ShellBottom.setRotationPoint(0F, -3F, 0F);
		ShellBottom.setTextureSize(128, 64);
		ShellBottom.mirror = true;
		setRotation(ShellBottom, 0F, 0F, 0F);
		Eye = new ModelRenderer(this, 20, 7);
		Eye.addBox(-3F, -2F, -3F, 6, 6, 6);
		Eye.setRotationPoint(0F, -3F, 0F);
		Eye.setTextureSize(128, 64);
		Eye.mirror = true;
		setRotation(Eye, 0F, 0F, 0F);
		ShellTopMid = new ModelRenderer(this, 10, 40);
		ShellTopMid.addBox(-11F, -6F, -9F, 22, 3, 20);
		ShellTopMid.setRotationPoint(0F, -3F, 0F);
		ShellTopMid.setTextureSize(128, 64);
		ShellTopMid.mirror = true;
		setRotation(ShellTopMid, 0F, 0F, 0F);
		ShellBack = new ModelRenderer(this, 0, 20);
		ShellBack.addBox(-12F, -3F, 8F, 24, 10, 5);
		ShellBack.setRotationPoint(0F, -3F, 0F);
		ShellBack.setTextureSize(128, 64);
		ShellBack.mirror = true;
		setRotation(ShellBack, 0F, 0F, 0F);
		ShellBottomMid = new ModelRenderer(this, 10, 40);
		ShellBottomMid.addBox(-11F, 7F, -9F, 22, 3, 20);
		ShellBottomMid.setRotationPoint(0F, -3F, 0F);
		ShellBottomMid.setTextureSize(128, 64);
		ShellBottomMid.mirror = true;
		setRotation(ShellBottomMid, 0F, 0F, 0F);
		UpperRightTooth = new ModelRenderer(this, 24, 0);
		UpperRightTooth.addBox(-8F, -3F, -9F, 6, 3, 3);
		UpperRightTooth.setRotationPoint(0F, -3F, 0F);
		UpperRightTooth.setTextureSize(128, 64);
		UpperRightTooth.mirror = true;
		setRotation(UpperRightTooth, 0F, 0F, 0F);
		UpperLeftTooth = new ModelRenderer(this, 24, 0);
		UpperLeftTooth.addBox(2F, -3F, -9F, 6, 3, 3);
		UpperLeftTooth.setRotationPoint(0F, -3F, 0F);
		UpperLeftTooth.setTextureSize(128, 64);
		UpperLeftTooth.mirror = true;
		setRotation(UpperLeftTooth, 0F, 0F, 0F);
		LowerRightTooth = new ModelRenderer(this, 24, 0);
		LowerRightTooth.addBox(-10F, 4F, -9F, 6, 3, 3);
		LowerRightTooth.setRotationPoint(0F, -3F, 0F);
		LowerRightTooth.setTextureSize(128, 64);
		LowerRightTooth.mirror = true;
		setRotation(LowerRightTooth, 0F, 0F, 0F);
		LowerLeftTooth = new ModelRenderer(this, 24, 0);
		LowerLeftTooth.addBox(3F, 4F, -9F, 6, 3, 3);
		LowerLeftTooth.setRotationPoint(0F, -3F, 0F);
		LowerLeftTooth.setTextureSize(128, 64);
		LowerLeftTooth.mirror = true;
		setRotation(LowerLeftTooth, 0F, 0F, 0F);
		ShellLeftThick = new ModelRenderer(this, 96, 40);
		ShellLeftThick.addBox(10F, -3F, -2F, 4, 10, 10);
		ShellLeftThick.setRotationPoint(0F, -3F, 0F);
		ShellLeftThick.setTextureSize(128, 64);
		ShellLeftThick.mirror = true;
		setRotation(ShellLeftThick, 0F, 0F, 0F);
		ShellRightThick = new ModelRenderer(this, 96, 40);
		ShellRightThick.addBox(-14F, -3F, -2F, 4, 10, 10);
		ShellRightThick.setRotationPoint(0F, -3F, 0F);
		ShellRightThick.setTextureSize(128, 64);
		ShellRightThick.mirror = true;
		setRotation(ShellRightThick, 0F, 0F, 0F);
		ClawNobRight = new ModelRenderer(this, 0, 10);
		ClawNobRight.addBox(-13F, 7F, -9F, 4, 4, 4);
		ClawNobRight.setRotationPoint(0F, 0F, 0F);
		ClawNobRight.setTextureSize(128, 64);
		ClawNobRight.mirror = true;
		setRotation(ClawNobRight, 0F, 0F, 0F);
		ClawNobLeft = new ModelRenderer(this, 0, 10);
		ClawNobLeft.addBox(8F, 10F, -9F, 4, 4, 4);
		ClawNobLeft.setRotationPoint(0F, -3F, 0F);
		ClawNobLeft.setTextureSize(128, 64);
		ClawNobLeft.mirror = true;
		setRotation(ClawNobLeft, 0F, 0F, 0F);
		ShellRightThin = new ModelRenderer(this, 80, 40);
		ShellRightThin.addBox(-12F, -3F, -5F, 4, 10, 3);
		ShellRightThin.setRotationPoint(0F, -3F, 0F);
		ShellRightThin.setTextureSize(128, 64);
		ShellRightThin.mirror = true;
		setRotation(ShellRightThin, 0F, 0F, 0F);
		ShellLeftThin = new ModelRenderer(this, 80, 40);
		ShellLeftThin.addBox(8F, -3F, -5F, 4, 10, 3);
		ShellLeftThin.setRotationPoint(0F, -3F, 0F);
		ShellLeftThin.setTextureSize(128, 64);
		ShellLeftThin.mirror = true;
		setRotation(ShellLeftThin, 0F, 0F, 0F);
		RightMidLeg = new ModelRenderer(this, 0, 0);
		RightMidLeg.addBox(-22F, 0F, 2F, 8, 2, 2);
		RightMidLeg.setRotationPoint(0F, -3F, 0F);
		RightMidLeg.setTextureSize(128, 64);
		RightMidLeg.mirror = true;
		setRotation(RightMidLeg, 0F, 0F, 0F);
		LeftMidLeg = new ModelRenderer(this, 0, 0);
		LeftMidLeg.addBox(14F, 0F, 2F, 8, 2, 2);
		LeftMidLeg.setRotationPoint(0F, -3F, 0F);
		LeftMidLeg.setTextureSize(128, 64);
		LeftMidLeg.mirror = true;
		setRotation(LeftMidLeg, 0F, 0F, 0F);
		LeftLowerLeg = new ModelRenderer(this, 0, 0);
		LeftLowerLeg.addBox(13F, 4F, 0F, 8, 2, 2);
		LeftLowerLeg.setRotationPoint(0F, -3F, 0F);
		LeftLowerLeg.setTextureSize(128, 64);
		LeftLowerLeg.mirror = true;
		setRotation(LeftLowerLeg, 0F, 0F, 0.3346075F);
		RightLowerLeg = new ModelRenderer(this, 0, 0);
		RightLowerLeg.addBox(-21F, 4F, 0F, 8, 2, 2);
		RightLowerLeg.setRotationPoint(0F, -2F, 0F);
		RightLowerLeg.setTextureSize(128, 64);
		RightLowerLeg.mirror = true;
		setRotation(RightLowerLeg, 0F, 0F, -0.3346075F);
		LeftUpperLeg = new ModelRenderer(this, 0, 0);
		LeftUpperLeg.addBox(11F, -3F, 0F, 8, 2, 2);
		LeftUpperLeg.setRotationPoint(0F, -3F, 0F);
		LeftUpperLeg.setTextureSize(128, 64);
		LeftUpperLeg.mirror = true;
		setRotation(LeftUpperLeg, 0F, 0F, -0.3346075F);
		RightUpperLeg = new ModelRenderer(this, 0, 0);
		RightUpperLeg.addBox(-19F, -3F, 0F, 8, 2, 2);
		RightUpperLeg.setRotationPoint(0F, -3F, 0F);
		RightUpperLeg.setTextureSize(128, 64);
		RightUpperLeg.mirror = true;
		setRotation(RightUpperLeg, 0F, 0F, 0.3346075F);
		RightClawArm = new ModelRenderer(this, 48, 0);
		RightClawArm.addBox(-12F, 15F, 0F, 2, 8, 2);
		RightClawArm.setRotationPoint(0F, -3F, 0F);
		RightClawArm.setTextureSize(128, 64);
		RightClawArm.mirror = true;
		setRotation(RightClawArm, -0.5948578F, 0F, 0F);
		LeftClawArm = new ModelRenderer(this, 48, 0);
		LeftClawArm.addBox(9F, 15F, 0F, 2, 8, 2);
		LeftClawArm.setRotationPoint(0F, -3F, 0F);
		LeftClawArm.setTextureSize(128, 64);
		LeftClawArm.mirror = true;
		setRotation(LeftClawArm, -0.5948578F, 0F, 0F);
		LeftClawBig = new ModelRenderer(this, 0, 38);
		LeftClawBig.addBox(10F, 23F, -4F, 5, 7, 5);
		LeftClawBig.setRotationPoint(0F, -3F, 0F);
		LeftClawBig.setTextureSize(128, 64);
		LeftClawBig.mirror = true;
		setRotation(LeftClawBig, -0.4833219F, 0F, 0F);
		LeftClawSmall = new ModelRenderer(this, 0, 52);
		LeftClawSmall.addBox(9F, 23F, 0F, 1, 5, 4);
		LeftClawSmall.setRotationPoint(0F, -3F, 0F);
		LeftClawSmall.setTextureSize(128, 64);
		LeftClawSmall.mirror = true;
		setRotation(LeftClawSmall, -0.5948578F, 0F, 0F);
		RightClawBig = new ModelRenderer(this, 0, 38);
		RightClawBig.addBox(-16F, 23F, -5F, 5, 7, 5);
		RightClawBig.setRotationPoint(0F, -3F, 0F);
		RightClawBig.setTextureSize(128, 64);
		RightClawBig.mirror = true;
		setRotation(RightClawBig, -0.4833219F, 0F, 0F);
		RightClawSmall = new ModelRenderer(this, 0, 52);
		RightClawSmall.addBox(-11F, 23F, -1F, 1, 5, 4);
		RightClawSmall.setRotationPoint(0F, -3F, 0F);
		RightClawSmall.setTextureSize(128, 64);
		RightClawSmall.mirror = true;
		setRotation(RightClawSmall, -0.5948578F, 0F, 0F);
		LeftMidTip = new ModelRenderer(this, 0, 0);
		LeftMidTip.addBox(21F, 0F, 6F, 8, 1, 1);
		LeftMidTip.setRotationPoint(0F, -3F, 0F);
		LeftMidTip.setTextureSize(128, 64);
		LeftMidTip.mirror = true;
		setRotation(LeftMidTip, 0F, 0.1858931F, 0.0371786F);
		RightMidTip = new ModelRenderer(this, 0, 0);
		RightMidTip.addBox(-29F, 0F, 6F, 8, 1, 1);
		RightMidTip.setRotationPoint(0F, -3F, 0F);
		RightMidTip.setTextureSize(128, 64);
		RightMidTip.mirror = true;
		setRotation(RightMidTip, 0F, -0.1858931F, -0.0371786F);
		LeftLowerTip = new ModelRenderer(this, 0, 0);
		LeftLowerTip.addBox(20F, 5F, 3F, 8, 1, 1);
		LeftLowerTip.setRotationPoint(0F, -3F, 0F);
		LeftLowerTip.setTextureSize(128, 64);
		LeftLowerTip.mirror = true;
		setRotation(LeftLowerTip, 0F, 0.1487144F, 0.3346075F);
		RightLowerTip = new ModelRenderer(this, 0, 0);
		RightLowerTip.addBox(-28F, 6F, 3F, 8, 1, 1);
		RightLowerTip.setRotationPoint(0F, -3F, 0F);
		RightLowerTip.setTextureSize(128, 64);
		RightLowerTip.mirror = true;
		setRotation(RightLowerTip, 0F, -0.1487144F, -0.3346075F);
		LeftUpperTip = new ModelRenderer(this, 0, 0);
		LeftUpperTip.addBox(19F, -2F, 1F, 8, 1, 1);
		LeftUpperTip.setRotationPoint(0F, -3F, 0F);
		LeftUpperTip.setTextureSize(128, 64);
		LeftUpperTip.mirror = true;
		setRotation(LeftUpperTip, 0F, 0.0743572F, -0.3717861F);
		RightUpperTip = new ModelRenderer(this, 0, 0);
		RightUpperTip.addBox(-27F, -2F, 1F, 8, 1, 1);
		RightUpperTip.setRotationPoint(0F, -3F, 0F);
		RightUpperTip.setTextureSize(128, 64);
		RightUpperTip.mirror = true;
		setRotation(RightUpperTip, 0F, -0.0743572F, 0.3717861F);
	}

	public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5)
	{
		super.render(entity, f, f1, f2, f3, f4, f5);
		setRotationAngles(f, f1, f2, f3, f4, f5, entity);
		ShellTop.render(f5);
		ShellBottom.render(f5);
		Eye.render(f5);
		ShellTopMid.render(f5);
		ShellBack.render(f5);
		ShellBottomMid.render(f5);
		UpperRightTooth.render(f5);
		UpperLeftTooth.render(f5);
		LowerRightTooth.render(f5);
		LowerLeftTooth.render(f5);
		ShellLeftThick.render(f5);
		ShellRightThick.render(f5);
		ClawNobRight.render(f5);
		ClawNobLeft.render(f5);
		ShellRightThin.render(f5);
		ShellLeftThin.render(f5);
		RightMidLeg.render(f5);
		LeftMidLeg.render(f5);
		LeftLowerLeg.render(f5);
		RightLowerLeg.render(f5);
		LeftUpperLeg.render(f5);
		RightUpperLeg.render(f5);
		RightClawArm.render(f5);
		LeftClawArm.render(f5);
		LeftClawBig.render(f5);
		LeftClawSmall.render(f5);
		RightClawBig.render(f5);
		RightClawSmall.render(f5);
		LeftMidTip.render(f5);
		RightMidTip.render(f5);
		LeftLowerTip.render(f5);
		RightLowerTip.render(f5);
		LeftUpperTip.render(f5);
		RightUpperTip.render(f5);
	}

	private void setRotation(ModelRenderer model, float x, float y, float z)
	{
		model.rotateAngleX = x;
		model.rotateAngleY = y;
		model.rotateAngleZ = z;
	}

	public void setRotationAngles(float f, float f1, float f2, float f3, float f4, float f5, Entity entity)
	{
		super.setRotationAngles(f, f1, f2, f3, f4, f5, entity);
	}

}
