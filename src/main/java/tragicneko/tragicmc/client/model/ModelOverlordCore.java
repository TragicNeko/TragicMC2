package tragicneko.tragicmc.client.model;

import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;

public class ModelOverlordCore extends ModelBase
{
    ModelRenderer head;
    ModelRenderer headTop;
    ModelRenderer headBottom;
    ModelRenderer pincerLeft;
    ModelRenderer pincerRight;
    ModelRenderer pincerTipLeft;
    ModelRenderer pincerTipRight;
    ModelRenderer neck;
    ModelRenderer brain;
    ModelRenderer brain2;
    ModelRenderer brain3;
    ModelRenderer brain4;
    ModelRenderer brain5;
    ModelRenderer brain6;
    ModelRenderer brain7;
    ModelRenderer brain8;
    ModelRenderer brain9;
    ModelRenderer brain10;
    ModelRenderer brain11;
    ModelRenderer brain12;
    ModelRenderer brainSac;
    ModelRenderer body;
    ModelRenderer eye;
    ModelRenderer knobFR;
    ModelRenderer knobFMR;
    ModelRenderer knobBMR;
    ModelRenderer knobBR;
    ModelRenderer knobFL;
    ModelRenderer knobFML;
    ModelRenderer knobBML;
    ModelRenderer knobBL;
    ModelRenderer eye2;
    ModelRenderer eye3;
    ModelRenderer eye4;
    ModelRenderer eye5;
    ModelRenderer eye6;
    ModelRenderer eye7;
  
  public ModelOverlordCore()
  {
    textureWidth = 128;
    textureHeight = 128;
    
      head = new ModelRenderer(this, 0, 0);
      head.addBox(-8F, -8F, -8F, 16, 6, 16);
      head.setRotationPoint(0F, 4F, 0F);
      head.setTextureSize(128, 128);
      head.mirror = true;
      setRotation(head, 0F, 0F, 0F);
      headTop = new ModelRenderer(this, 0, 0);
      headTop.addBox(-5F, -11F, -5F, 10, 3, 14);
      headTop.setRotationPoint(0F, 4F, 0F);
      headTop.setTextureSize(128, 128);
      headTop.mirror = true;
      setRotation(headTop, 0F, 0F, 0F);
      headBottom = new ModelRenderer(this, 0, 0);
      headBottom.addBox(-6F, -2F, -7F, 12, 5, 8);
      headBottom.setRotationPoint(0F, 4F, 0F);
      headBottom.setTextureSize(128, 128);
      headBottom.mirror = true;
      setRotation(headBottom, 0F, 0F, 0F);
      pincerLeft = new ModelRenderer(this, 0, 0);
      pincerLeft.addBox(-2F, -2F, -7F, 2, 5, 8);
      pincerLeft.setRotationPoint(-5F, 6F, -7F);
      pincerLeft.setTextureSize(128, 128);
      pincerLeft.mirror = true;
      setRotation(pincerLeft, 0F, 0F, 0F);
      pincerRight = new ModelRenderer(this, 0, 0);
      pincerRight.addBox(0F, -2F, -7F, 2, 5, 8);
      pincerRight.setRotationPoint(5F, 6F, -7F);
      pincerRight.setTextureSize(128, 128);
      pincerRight.mirror = true;
      setRotation(pincerRight, 0F, 0F, 0F);
      pincerTipLeft = new ModelRenderer(this, 0, 0);
      pincerTipLeft.addBox(0F, -2F, -9F, 4, 3, 1);
      pincerTipLeft.setRotationPoint(-5F, 7F, -6F);
      pincerTipLeft.setTextureSize(128, 128);
      pincerTipLeft.mirror = true;
      setRotation(pincerTipLeft, 0F, 0F, 0F);
      pincerTipRight = new ModelRenderer(this, 0, 0);
      pincerTipRight.addBox(-4F, -1F, -9F, 4, 3, 1);
      pincerTipRight.setRotationPoint(5F, 6F, -6F);
      pincerTipRight.setTextureSize(128, 128);
      pincerTipRight.mirror = true;
      setRotation(pincerTipRight, 0F, 0F, 0F);
      neck = new ModelRenderer(this, 0, 0);
      neck.addBox(-3F, -4F, 1F, 6, 6, 9);
      neck.setRotationPoint(0F, 4F, 0F);
      neck.setTextureSize(128, 128);
      neck.mirror = true;
      setRotation(neck, 0F, 0F, 0F);
      brain = new ModelRenderer(this, 0, 0);
      brain.addBox(-6F, -5F, 0F, 6, 6, 6);
      brain.setRotationPoint(0F, 0F, 11F);
      brain.setTextureSize(128, 128);
      brain.mirror = true;
      setRotation(brain, 0F, 0F, 0F);
      brain2 = new ModelRenderer(this, 0, 0);
      brain2.addBox(-1F, -4F, -1F, 6, 6, 6);
      brain2.setRotationPoint(0F, 0F, 11F);
      brain2.setTextureSize(128, 128);
      brain2.mirror = true;
      setRotation(brain2, 0F, 0F, 0F);
      brain3 = new ModelRenderer(this, 0, 0);
      brain3.addBox(1F, -5F, 15F, 6, 6, 6);
      brain3.setRotationPoint(0F, 2F, 11F);
      brain3.setTextureSize(128, 128);
      brain3.mirror = true;
      setRotation(brain3, 0F, 0F, 0F);
      brain4 = new ModelRenderer(this, 0, 0);
      brain4.addBox(4F, -5F, 18F, 6, 6, 6);
      brain4.setRotationPoint(0F, 0F, 0F);
      brain4.setTextureSize(128, 128);
      brain4.mirror = true;
      setRotation(brain4, 0F, 0F, 0F);
      brain5 = new ModelRenderer(this, 0, 0);
      brain5.addBox(0F, -6F, 10F, 6, 6, 6);
      brain5.setRotationPoint(0F, 0F, 11F);
      brain5.setTextureSize(128, 128);
      brain5.mirror = true;
      setRotation(brain5, 0F, 0F, 0F);
      brain6 = new ModelRenderer(this, 0, 0);
      brain6.addBox(0F, 0F, 3F, 6, 6, 6);
      brain6.setRotationPoint(0F, 0F, 11F);
      brain6.setTextureSize(128, 128);
      brain6.mirror = true;
      setRotation(brain6, 0F, 0F, 0F);
      brain7 = new ModelRenderer(this, 0, 0);
      brain7.addBox(-4F, -7F, 3F, 6, 6, 6);
      brain7.setRotationPoint(0F, 0F, 11F);
      brain7.setTextureSize(128, 128);
      brain7.mirror = true;
      setRotation(brain7, 0F, 0F, 0F);
      brain8 = new ModelRenderer(this, 0, 0);
      brain8.addBox(-3F, -1F, 6F, 6, 6, 6);
      brain8.setRotationPoint(0F, 0F, 11F);
      brain8.setTextureSize(128, 128);
      brain8.mirror = true;
      setRotation(brain8, 0F, 0F, 0F);
      brain9 = new ModelRenderer(this, 0, 0);
      brain9.addBox(0F, 1F, 9F, 6, 6, 6);
      brain9.setRotationPoint(0F, 0F, 11F);
      brain9.setTextureSize(128, 128);
      brain9.mirror = true;
      setRotation(brain9, 0F, 0F, 0F);
      brain10 = new ModelRenderer(this, 0, 0);
      brain10.addBox(-1F, 2F, 0F, 6, 6, 6);
      brain10.setRotationPoint(0F, 0F, 11F);
      brain10.setTextureSize(128, 128);
      brain10.mirror = true;
      setRotation(brain10, 0F, 0F, 0F);
      brain11 = new ModelRenderer(this, 0, 0);
      brain11.addBox(-5F, 0F, 13F, 6, 6, 6);
      brain11.setRotationPoint(0F, 0F, 11F);
      brain11.setTextureSize(128, 128);
      brain11.mirror = true;
      setRotation(brain11, 0F, 0F, 0F);
      brain12 = new ModelRenderer(this, 0, 0);
      brain12.addBox(-5F, 0F, 1F, 6, 6, 6);
      brain12.setRotationPoint(0F, 0F, 11F);
      brain12.setTextureSize(128, 128);
      brain12.mirror = true;
      setRotation(brain12, 0F, 0F, 0F);
      brainSac = new ModelRenderer(this, 0, 0);
      brainSac.addBox(-12F, -14F, 2F, 24, 18, 28);
      brainSac.setRotationPoint(0F, 4F, 8F);
      brainSac.setTextureSize(128, 128);
      brainSac.mirror = true;
      setRotation(brainSac, 0F, 0F, 0F);
      body = new ModelRenderer(this, 0, 0);
      body.addBox(-4F, 1F, -3F, 8, 6, 8);
      body.setRotationPoint(0F, 4F, 0F);
      body.setTextureSize(128, 128);
      body.mirror = true;
      setRotation(body, 0F, 0F, 0F);
      eye = new ModelRenderer(this, 0, 0);
      eye.addBox(-2F, -2F, -9F, 4, 4, 2);
      eye.setRotationPoint(0F, 4F, 0F);
      eye.setTextureSize(128, 128);
      eye.mirror = true;
      setRotation(eye, 0F, 0F, 0F);
      knobFR = new ModelRenderer(this, 0, 0);
      knobFR.addBox(-6F, 1F, -2F, 2, 2, 2);
      knobFR.setRotationPoint(0F, 10F, -1F);
      knobFR.setTextureSize(128, 128);
      knobFR.mirror = true;
      setRotation(knobFR, 0F, 0F, 0F);
      knobFMR = new ModelRenderer(this, 0, 0);
      knobFMR.addBox(-6F, 1F, -2F, 2, 2, 2);
      knobFMR.setRotationPoint(0F, 10F, 3F);
      knobFMR.setTextureSize(128, 128);
      knobFMR.mirror = true;
      setRotation(knobFMR, 0F, 0F, 0F);
      knobBMR = new ModelRenderer(this, 0, 0);
      knobBMR.addBox(-6F, -1F, -1F, 2, 2, 2);
      knobBMR.setRotationPoint(0F, 10F, 5F);
      knobBMR.setTextureSize(128, 128);
      knobBMR.mirror = true;
      setRotation(knobBMR, 0F, 0F, 0F);
      knobBR = new ModelRenderer(this, 0, 0);
      knobBR.addBox(0F, 0F, 0F, 2, 2, 2);
      knobBR.setRotationPoint(-5F, 6F, 5F);
      knobBR.setTextureSize(128, 128);
      knobBR.mirror = true;
      setRotation(knobBR, 0F, 0F, 0F);
      knobFL = new ModelRenderer(this, 0, 0);
      knobFL.addBox(4F, 1F, -2F, 2, 2, 2);
      knobFL.setRotationPoint(0F, 10F, -1F);
      knobFL.setTextureSize(128, 128);
      knobFL.mirror = true;
      setRotation(knobFL, 0F, 0F, 0F);
      knobFML = new ModelRenderer(this, 0, 0);
      knobFML.addBox(4F, 1F, -2F, 2, 2, 2);
      knobFML.setRotationPoint(0F, 10F, 3F);
      knobFML.setTextureSize(128, 128);
      knobFML.mirror = true;
      setRotation(knobFML, 0F, 0F, 0F);
      knobBML = new ModelRenderer(this, 0, 0);
      knobBML.addBox(4F, 0F, -1F, 2, 2, 2);
      knobBML.setRotationPoint(0F, 9F, 5F);
      knobBML.setTextureSize(128, 128);
      knobBML.mirror = true;
      setRotation(knobBML, 0F, 0F, 0F);
      knobBL = new ModelRenderer(this, 0, 0);
      knobBL.addBox(-2F, 0F, 0F, 2, 2, 2);
      knobBL.setRotationPoint(5F, 6F, 5F);
      knobBL.setTextureSize(128, 128);
      knobBL.mirror = true;
      setRotation(knobBL, 0F, 0F, 0F);
      eye2 = new ModelRenderer(this, 0, 0);
      eye2.addBox(1F, -6F, -9F, 3, 3, 1);
      eye2.setRotationPoint(0F, 4F, 0F);
      eye2.setTextureSize(128, 128);
      eye2.mirror = true;
      setRotation(eye2, 0F, 0F, 0F);
      eye3 = new ModelRenderer(this, 0, 0);
      eye3.addBox(-5F, -5F, -9F, 3, 3, 1);
      eye3.setRotationPoint(0F, 4F, 0F);
      eye3.setTextureSize(128, 128);
      eye3.mirror = true;
      setRotation(eye3, 0F, 0F, 0F);
      eye4 = new ModelRenderer(this, 0, 0);
      eye4.addBox(5F, -7F, -9F, 2, 2, 1);
      eye4.setRotationPoint(0F, 4F, 0F);
      eye4.setTextureSize(128, 128);
      eye4.mirror = true;
      setRotation(eye4, 0F, 0F, 0F);
      eye5 = new ModelRenderer(this, 0, 0);
      eye5.addBox(-7F, -6F, -9F, 1, 1, 1);
      eye5.setRotationPoint(0F, 4F, 0F);
      eye5.setTextureSize(128, 128);
      eye5.mirror = true;
      setRotation(eye5, 0F, 0F, 0F);
      eye6 = new ModelRenderer(this, 0, 0);
      eye6.addBox(-9F, -7F, 0F, 1, 2, 2);
      eye6.setRotationPoint(0F, 4F, 0F);
      eye6.setTextureSize(128, 128);
      eye6.mirror = true;
      setRotation(eye6, 0F, 0F, 0F);
      eye7 = new ModelRenderer(this, 0, 0);
      eye7.addBox(-1F, -7F, -9F, 1, 1, 1);
      eye7.setRotationPoint(0F, 4F, 0F);
      eye7.setTextureSize(128, 128);
      eye7.mirror = true;
      setRotation(eye7, 0F, 0F, 0F);
  }
  
  public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5)
  {
    super.render(entity, f, f1, f2, f3, f4, f5);
    setRotationAngles(f, f1, f2, f3, f4, f5, entity);
    head.render(f5);
    headTop.render(f5);
    headBottom.render(f5);
    pincerLeft.render(f5);
    pincerRight.render(f5);
    pincerTipLeft.render(f5);
    pincerTipRight.render(f5);
    neck.render(f5);
    brain.render(f5);
    brain2.render(f5);
    brain3.render(f5);
    brain4.render(f5);
    brain5.render(f5);
    brain6.render(f5);
    brain7.render(f5);
    brain8.render(f5);
    brain9.render(f5);
    brain10.render(f5);
    brain11.render(f5);
    brain12.render(f5);
    brainSac.render(f5);
    body.render(f5);
    eye.render(f5);
    knobFR.render(f5);
    knobFMR.render(f5);
    knobBMR.render(f5);
    knobBR.render(f5);
    knobFL.render(f5);
    knobFML.render(f5);
    knobBML.render(f5);
    knobBL.render(f5);
    eye2.render(f5);
    eye3.render(f5);
    eye4.render(f5);
    eye5.render(f5);
    eye6.render(f5);
    eye7.render(f5);
  }
  
  private void setRotation(ModelRenderer model, float x, float y, float z)
  {
    model.rotateAngleX = x;
    model.rotateAngleY = y;
    model.rotateAngleZ = z;
  }
  
  public void setRotationAngles(float f, float f1, float f2, float f3, float f4, float f5, Entity entity)
  {
    super.setRotationAngles(f, f1, f2, f3, f4, f5, entity);
  }

}
